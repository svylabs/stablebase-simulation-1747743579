{
  "attributes": [
    {
      "name": "collateralLoss",
      "type": "bigint",
      "contract_function": "collateralLoss",
      "parameters": []
    },
    {
      "name": "lastSBRRewardDistributedTime",
      "type": "bigint",
      "contract_function": "lastSBRRewardDistributedTime",
      "parameters": []
    },
    {
      "name": "minimumScalingFactor",
      "type": "bigint",
      "contract_function": "minimumScalingFactor",
      "parameters": []
    },
    {
      "name": "precision",
      "type": "bigint",
      "contract_function": "precision",
      "parameters": []
    },
    {
      "name": "rewardLoss",
      "type": "bigint",
      "contract_function": "rewardLoss",
      "parameters": []
    },
    {
      "name": "rewardSenderActive",
      "type": "boolean",
      "contract_function": "rewardSenderActive",
      "parameters": []
    },
    {
      "name": "sbrDistributionRate",
      "type": "bigint",
      "contract_function": "sbrDistributionRate",
      "parameters": []
    },
    {
      "name": "sbrRewardDistributionEndTime",
      "type": "bigint",
      "contract_function": "sbrRewardDistributionEndTime",
      "parameters": []
    },
    {
      "name": "sbrRewardDistributionStatus",
      "type": "bigint",
      "contract_function": "sbrRewardDistributionStatus",
      "parameters": []
    },
    {
      "name": "sbrRewardLoss",
      "type": "bigint",
      "contract_function": "sbrRewardLoss",
      "parameters": []
    },
    {
      "name": "stakeResetCount",
      "type": "bigint",
      "contract_function": "stakeResetCount",
      "parameters": []
    },
    {
      "name": "stakeScalingFactor",
      "type": "bigint",
      "contract_function": "stakeScalingFactor",
      "parameters": []
    },
    {
      "name": "totalCollateralPerToken",
      "type": "bigint",
      "contract_function": "totalCollateralPerToken",
      "parameters": []
    },
    {
      "name": "totalRewardPerToken",
      "type": "bigint",
      "contract_function": "totalRewardPerToken",
      "parameters": []
    },
    {
      "name": "totalSbrRewardPerToken",
      "type": "bigint",
      "contract_function": "totalSbrRewardPerToken",
      "parameters": []
    },
    {
      "name": "totalStakedRaw",
      "type": "bigint",
      "contract_function": "totalStakedRaw",
      "parameters": []
    },
    {
      "name": "users",
      "type": "IStabilityPoolUserInfo",
      "contract_function": "users",
      "parameters": [
        {
          "name": "accountAddress",
          "type": "string",
          "reference": "accountAddress"
        }
      ]
    },
    {
      "name": "sbrRewardSnapshots",
      "type": "IStabilityPoolSBRRewardSnapshotInfo",
      "contract_function": "sbrRewardSnapshots",
      "parameters": [
        {
          "name": "accountAddress",
          "type": "string",
          "reference": "accountAddress"
        }
      ]
    },
    {
      "name": "userPendingCollateral",
      "type": "bigint",
      "contract_function": "userPendingCollateral",
      "parameters": [
        {
          "name": "accountAddress",
          "type": "string",
          "reference": "accountAddress"
        }
      ]
    },
    {
      "name": "userPendingReward",
      "type": "bigint",
      "contract_function": "userPendingReward",
      "parameters": [
        {
          "name": "accountAddress",
          "type": "string",
          "reference": "accountAddress"
        }
      ]
    },
    {
      "name": "userPendingRewardAndCollateral",
      "type": "[bigint, bigint, bigint]",
      "contract_function": "userPendingRewardAndCollateral",
      "parameters": [
        {
          "name": "accountAddress",
          "type": "string",
          "reference": "accountAddress"
        }
      ]
    },
    {
      "name": "stakeResetSnapshots",
      "type": "IStabilityPoolStakeResetSnapshot",
      "contract_function": "stakeResetSnapshots",
      "parameters": [
        {
          "name": "index",
          "type": "bigint",
          "reference": ""
        }
      ]
    }
  ],
  "typescript_interfaces": {
    "contract_snapshot_interface_code": "type StabilityPoolSBRRewardDistribution = bigint; interface IStabilityPoolUserInfo { stake: bigint; rewardSnapshot: bigint; collateralSnapshot: bigint; cumulativeProductScalingFactor: bigint; stakeResetCount: bigint; } interface IStabilityPoolSBRRewardSnapshotInfo { rewardSnapshot: bigint; status: StabilityPoolSBRRewardDistribution; } interface IStabilityPoolStakeResetSnapshot { scalingFactor: bigint; totalRewardPerToken: bigint; totalCollateralPerToken: bigint; totalSBRRewardPerToken: bigint; } interface StabilityPoolSnapshot { collateralLoss: bigint; lastSBRRewardDistributedTime: bigint; minimumScalingFactor: bigint; precision: bigint; rewardLoss: bigint; rewardSenderActive: boolean; sbrDistributionRate: bigint; sbrRewardDistributionEndTime: bigint; sbrRewardDistributionStatus: StabilityPoolSBRRewardDistribution; sbrRewardLoss: bigint; stakeResetCount: bigint; stakeScalingFactor: bigint; totalCollateralPerToken: bigint; totalRewardPerToken: bigint; totalSbrRewardPerToken: bigint; totalStakedRaw: bigint; users: Record<string, IStabilityPoolUserInfo>; sbrRewardSnapshots: Record<string, IStabilityPoolSBRRewardSnapshotInfo>; userPendingCollateral: Record<string, bigint>; userPendingReward: Record<string, bigint>; userPendingRewardAndCollateral: Record<string, [bigint, bigint, bigint]>; stakeResetSnapshots: IStabilityPoolStakeResetSnapshot[]; }",
    "interface_name": "StabilityPoolSnapshot"
  }
}