{
  "attributes": [
    {
      "name": "bootstrapModeDebtThreshold",
      "type": "uint256",
      "contract_function": "BOOTSTRAP_MODE_DEBT_THRESHOLD",
      "parameters": []
    },
    {
      "name": "extraGasCompensation",
      "type": "uint256",
      "contract_function": "EXTRA_GAS_COMPENSATION",
      "parameters": []
    },
    {
      "name": "minimumDebt",
      "type": "uint256",
      "contract_function": "MINIMUM_DEBT",
      "parameters": []
    },
    {
      "name": "protocolMode",
      "type": "uint8",
      "contract_function": "PROTOCOL_MODE",
      "parameters": []
    },
    {
      "name": "redemptionBaseFee",
      "type": "uint256",
      "contract_function": "REDEMPTION_BASE_FEE",
      "parameters": []
    },
    {
      "name": "redemptionLiquidationFee",
      "type": "uint256",
      "contract_function": "REDEMPTION_LIQUIDATION_FEE",
      "parameters": []
    },
    {
      "name": "sbrFeeReward",
      "type": "uint256",
      "contract_function": "SBR_FEE_REWARD",
      "parameters": []
    },
    {
      "name": "accountBalance",
      "type": "uint256",
      "contract_function": "balanceOf",
      "parameters": [
        {
          "name": "owner",
          "type": "address",
          "reference": "accountAddress"
        }
      ]
    },
    {
      "name": "redemptionAmountsAndFee",
      "type": "tuple",
      "contract_function": "calculateRedemptionAmountsAndFee",
      "parameters": [
        {
          "name": "safe",
          "type": "IStableBase.Safe",
          "reference": "safe"
        },
        {
          "name": "amountToRedeem",
          "type": "uint256",
          "reference": "amountToRedeem"
        },
        {
          "name": "collateralPrice",
          "type": "uint256",
          "reference": "collateralPrice"
        }
      ]
    },
    {
      "name": "collateralLoss",
      "type": "uint256",
      "contract_function": "collateralLoss",
      "parameters": []
    },
    {
      "name": "cumulativeCollateralPerUnitCollateral",
      "type": "uint256",
      "contract_function": "cumulativeCollateralPerUnitCollateral",
      "parameters": []
    },
    {
      "name": "cumulativeDebtPerUnitCollateral",
      "type": "uint256",
      "contract_function": "cumulativeDebtPerUnitCollateral",
      "parameters": []
    },
    {
      "name": "debtLoss",
      "type": "uint256",
      "contract_function": "debtLoss",
      "parameters": []
    },
    {
      "name": "inactiveDebtAndCollateral",
      "type": "tuple",
      "contract_function": "getInactiveDebtAndCollateral",
      "parameters": [
        {
          "name": "safeId",
          "type": "uint256",
          "reference": "Safe ID"
        }
      ]
    },
    {
      "name": "isApprovedForAll",
      "type": "bool",
      "contract_function": "isApprovedForAll",
      "parameters": [
        {
          "name": "owner",
          "type": "address",
          "reference": "accountAddress"
        },
        {
          "name": "operator",
          "type": "address",
          "reference": "operatorAddress"
        }
      ]
    },
    {
      "name": "liquidationSnapshots",
      "type": "tuple",
      "contract_function": "liquidationSnapshots",
      "parameters": [
        {
          "name": "",
          "type": "uint256",
          "reference": "Safe ID"
        }
      ]
    },
    {
      "name": "mode",
      "type": "uint8",
      "contract_function": "mode",
      "parameters": []
    },
    {
      "name": "contractName",
      "type": "string",
      "contract_function": "name",
      "parameters": []
    },
    {
      "name": "safeInfo",
      "type": "tuple",
      "contract_function": "safes",
      "parameters": [
        {
          "name": "",
          "type": "uint256",
          "reference": "Safe ID"
        }
      ]
    },
    {
      "name": "sbrStakingPoolCanReceiveRewards",
      "type": "bool",
      "contract_function": "sbrStakingPoolCanReceiveRewards",
      "parameters": []
    },
    {
      "name": "stabilityPoolCanReceiveRewards",
      "type": "bool",
      "contract_function": "stabilityPoolCanReceiveRewards",
      "parameters": []
    },
    {
      "name": "interfaceSupport",
      "type": "bool",
      "contract_function": "supportsInterface",
      "parameters": [
        {
          "name": "interfaceId",
          "type": "bytes4",
          "reference": "interfaceId"
        }
      ]
    },
    {
      "name": "contractSymbol",
      "type": "string",
      "contract_function": "symbol",
      "parameters": []
    },
    {
      "name": "totalCollateral",
      "type": "uint256",
      "contract_function": "totalCollateral",
      "parameters": []
    },
    {
      "name": "totalDebt",
      "type": "uint256",
      "contract_function": "totalDebt",
      "parameters": []
    }
  ],
  "typescript_interfaces": {
    "contract_snapshot_interface_code": "interface StableBaseCDPSnapshot {\n  bootstrapModeDebtThreshold: bigint;\n  extraGasCompensation: bigint;\n  minimumDebt: bigint;\n  protocolMode: number;\n  redemptionBaseFee: bigint;\n  redemptionLiquidationFee: bigint;\n  sbrFeeReward: bigint;\n  collateralLoss: bigint;\n  cumulativeCollateralPerUnitCollateral: bigint;\n  cumulativeDebtPerUnitCollateral: bigint;\n  debtLoss: bigint;\n  mode: number;\n  contractName: string;\n  sbrStakingPoolCanReceiveRewards: boolean;\n  stabilityPoolCanReceiveRewards: boolean;\n  contractSymbol: string;\n  totalCollateral: bigint;\n  totalDebt: bigint;\n  accountBalance: bigint;\n  interfaceSupport: boolean;\n}\n\ninterface SafeInfo {\n    collateralAmount: bigint;\n    borrowedAmount: bigint;\n    weight: bigint;\n    totalBorrowedAmount: bigint;\n    feePaid: bigint;\n}\n\ninterface LiquidationSnapshot {\n    collateralPerCollateralSnapshot: bigint;\n    debtPerCollateralSnapshot: bigint;\n}\n\ninterface RedemptionAmountsAndFee {\n    borrowMode: boolean;\n    _collateralToRedeem: bigint;\n    _amountToRedeem: bigint;\n    _amountToRefund: bigint;\n    _ownerFee: bigint;\n    _redeemerFee: bigint;\n}\n\ninterface InactiveDebtAndCollateral {\n    inactiveDebt: bigint;\n    inactiveCollateral: bigint;\n}\n\n",
    "interface_name": "StableBaseCDPSnapshot"
  }
}