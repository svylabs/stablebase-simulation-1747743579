// Generated by SnapshotCodeGenerator

export interface StabilityPoolStateSnapshot {
  collateralLoss: bigint;
  lastSBRRewardDistributedTime: bigint;
  minimumScalingFactor: bigint;
  precision: bigint;
  rewardLoss: bigint;
  rewardSenderActive: boolean;
  sbrDistributionRate: bigint;
  sbrRewardDistributionEndTime: bigint;
  sbrRewardDistributionStatus: number;
  sbrRewardLoss: bigint;
  stakeResetCount: bigint;
  stakeScalingFactor: bigint;
  totalCollateralPerToken: bigint;
  totalRewardPerToken: bigint;
  totalSbrRewardPerToken: bigint;
  totalStakedRaw: bigint;
  stakeResetSnapshots: {
    scalingFactor: bigint;
    totalRewardPerToken: bigint;
    totalCollateralPerToken: bigint;
    totalSBRRewardPerToken: bigint;
  }[];
}

export interface StabilityPoolUserSnapshot {
  userInfo: {
    stake: bigint;
    rewardSnapshot: bigint;
    collateralSnapshot: bigint;
    cumulativeProductScalingFactor: bigint;
    stakeResetCount: bigint;
  };
  pendingReward: bigint;
  pendingCollateral: bigint;
  sbrRewardSnapshot: {
    rewardSnapshot: bigint;
    status: number;
  };
}

export interface StableBaseCDPContractStateSnapshot {
  collateralLoss: bigint;
  cumulativeCollateralPerUnitCollateral: bigint;
  cumulativeDebtPerUnitCollateral: bigint;
  debtLoss: bigint;
  inactiveDebt: bigint;
  inactiveCollateral: bigint;
  protocolMode: number;
  contractName: string;
  symbol: string;
  tokenURI: string;
  totalCollateral: bigint;
  totalDebt: bigint;
  liquidationSnapshots: {
        collateralPerCollateralSnapshot: bigint;
        debtPerCollateralSnapshot: bigint;
    };
  sbrStakingPoolCanReceiveRewards: boolean;
  stabilityPoolCanReceiveRewards: boolean;
  redemptionCalculation: {
    borrowMode: boolean;
    _collateralToRedeem: bigint;
    _amountToRedeem: bigint;
    _amountToRefund: bigint;
    _ownerFee: bigint;
    _redeemerFee: bigint;
  };
}


export interface StableBaseCDPUserDataSnapshot {
  balance: bigint;
  isApproved: boolean;
  tokenOwner: string;
  tokenApproved: string;
}


