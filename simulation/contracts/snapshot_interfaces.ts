// Generated by SnapshotCodeGenerator

export interface StabilityPoolStateSnapshot {
  collateralLoss: bigint;
  lastSBRRewardDistributedTime: bigint;
  minimumScalingFactor: bigint;
  precision: bigint;
  rewardLoss: bigint;
  rewardSenderActive: boolean;
  sbrDistributionRate: bigint;
  sbrRewardDistributionEndTime: bigint;
  sbrRewardDistributionStatus: number;
  sbrRewardLoss: bigint;
  stakeResetCount: bigint;
  stakeScalingFactor: bigint;
  totalCollateralPerToken: bigint;
  totalRewardPerToken: bigint;
  totalSbrRewardPerToken: bigint;
  totalStakedRaw: bigint;
  stakeResetSnapshots: {
    scalingFactor: bigint;
    totalRewardPerToken: bigint;
    totalCollateralPerToken: bigint;
    totalSBRRewardPerToken: bigint;
  }[];
}

export interface StabilityPoolUserSnapshot {
  userInfo: {
    stake: bigint;
    rewardSnapshot: bigint;
    collateralSnapshot: bigint;
    cumulativeProductScalingFactor: bigint;
    stakeResetCount: bigint;
  };
  pendingReward: bigint;
  pendingCollateral: bigint;
  sbrRewardSnapshot: {
    rewardSnapshot: bigint;
    status: number;
  };
}

export interface StableBaseCDPStateSnapshot {
  protocolMode: number;
  collateralLoss: bigint;
  cumulativeCollateralPerUnitCollateral: bigint;
  cumulativeDebtPerUnitCollateral: bigint;
  debtLoss: bigint;
  liquidationSnapshots: { collateralPerCollateralSnapshot: bigint, debtPerCollateralSnapshot: bigint };
  mode: number;
  totalCollateral: bigint;
  totalDebt: bigint;
  safeDetails: { collateralAmount: bigint; borrowedAmount: bigint; weight: bigint; totalBorrowedAmount: bigint; feePaid: bigint };
}


export interface UserStableBaseCDPSnapshot {
  safeBalance: bigint;
  safeApproval: string;
  isApprovedForAll: boolean;
  safeOwner: string;
}


