// Generated by SnapshotCodeGenerator

import { Snapshot, SnapshotProvider } from "@svylabs/ilumina";
import { Contract } from "ethers";
import { Actor } from "@svylabs/ilumina";


import { takestabilityPoolContractSnapshot } from "./stabilityPool_snapshot";

import { takestableBaseCDPContractSnapshot } from "./stableBaseCDP_snapshot";


export interface ContractSnapshot {

    stabilityPool: StabilityPoolSnapshot;

    stableBaseCDP: StableBaseCDPSnapshot;

}

export class ContractSnapshotProvider implements SnapshotProvider {
    private contracts: Record<string, Contract>;
    private actors: Actor[];

    constructor(contracts: Record<string, Contract>, actors: Actor[]) {
        this.contracts = contracts;
        this.actors = actors;
    }

    async snapshot(): Promise<Snapshot> {   
        const snapshot: Snapshot = {
            contractSnapshot: {},
            actorSnapshot: {}
        };
        const contractSnapshot = {};
        
        contractSnapshot["stabilityPool"] = await takestabilityPoolContractSnapshot(contracts.stabilityPool, actors);
        
        contractSnapshot["stableBaseCDP"] = await takestableBaseCDPContractSnapshot(contracts.stableBaseCDP, actors);
        
        snapshot.contractSnapshot = contractSnapshot;
        return snapshot;
    }
}